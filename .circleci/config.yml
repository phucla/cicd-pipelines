# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
# Use a package of configuration called an orb.
orbs:
  # Declare a dependency on the welcome-orb
  welcome: circleci/welcome-orb@0.4.1

commands:
  sayhello:
    description: "A very simple command for demonstration purposes"
    parameters:
      to:
        type: string
        default: "Hello world"
    steps:
      - run: echo << parameters.to >>
  print_pipeline_id:
    description: "Print pipeline id"
    steps:
      - run: echo $CIRCLE_WORKFLOW_ID
jobs:
  print_pipeline:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - print_pipeline_id

  save_hello_world_output:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: save hello command
          command: echo "hello world" > ~/output.txt
      - persist_to_workspace:
          root: ~/
          paths:
            - output.txt
  print_output_file:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - attach_workspace:
          at: ~/
      - run: cat ~/output.txt

  print-hello:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: print hello command
          command: echo ${MY_NAME_VAR}
  print-world:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: print world command
          command: echo $MY_NAME_VAR

  create_infrastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Create Cloudformation Stack
          command: |
            aws cloudformation deploy \
              --template-file template.yml \
              --stack-name myStack \
              --region us-east-1
# Orchestrate or schedule a set of jobs
workflows:
  # Name the workflow "welcome"
  welcome:
    # Run the print_hello job in its own container
    jobs:
      - save_hello_world_output
      - create_infrastructure
